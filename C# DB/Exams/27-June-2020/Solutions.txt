01. DDL

CREATE TABLE Clients
(
	ClientId INT PRIMARY KEY IDENTITY,
	FirstName VARCHAR(50) NOT NULL,
	LastName VARCHAR(50) NOT NULL,
	Phone CHAR(12) NOT NULL,
	CHECK(Len(Phone) = 12)
)

CREATE TABLE Mechanics
(
	MechanicId INT PRIMARY KEY IDENTITY,
	FirstName VARCHAR(50) NOT NULL,
	LastName VARCHAR(50) NOT NULL,
	Address VARCHAR(255) NOT NULL
)
CREATE TABLE Models
(
	ModelId INT PRIMARY KEY IDENTITY,
	Name VARCHAR(50) UNIQUE NOT NULL
)
CREATE TABLE Jobs
(
	JobId INT PRIMARY KEY IDENTITY,
	ModelId INT REFERENCES Models(ModelId) NOT NULL,
	Status VARCHAR(11) DEFAULT 'Pending' CHECK(Status IN ('Pending','In Progress','Finished')) NOT NULL,
	ClientId INT REFERENCES Clients(ClientId) NOT NULL,
	MechanicId INT REFERENCES Mechanics(MechanicId),
	IssueDate DATE NOT NULL,
	FinishDate DATE
)

CREATE TABLE Orders
(
	OrderId INT PRIMARY KEY IDENTITY,
	JobId INT NOT NULL REFERENCES Jobs(JobId),
	IssueDate DATE,
	Delivered BIT DEFAULT 0
)

CREATE TABLE Vendors
(
	VendorId INT PRIMARY KEY IDENTITY,
	Name VARCHAR(50) UNIQUE NOT NULL
)

CREATE TABLE Parts
(
	PartId INT PRIMARY KEY IDENTITY,
	SerialNumber VARCHAR(50) UNIQUE NOT NULL,
	Description VARCHAR(255),
	Price DECIMAL(6,2) NOT NULL CHECK(Price > 0 AND Price <= 9999.99),
	VendorId INT NOT NULL REFERENCES Vendors(VendorId),
	StockQty INT DEFAULT 0 CHECK(StockQty >= 0)
)

CREATE TABLE OrderParts
(
	OrderId INT REFERENCES Orders(OrderId) NOT NULL,
	PartId INT REFERENCES Parts(PartId) NOT NULL,
	Quantity INT DEFAULT 1 CHECK(Quantity > 0),
	
	CONSTRAINT PK_OrdersParts PRIMARY KEY(OrderId,PartId)
)

CREATE TABLE PartsNeeded
(
	JobId INT REFERENCES Jobs(JobId) NOT NULL,
	PartId INT REFERENCES Parts(PartId) NOT NULL,
	Quantity INT DEFAULT 1 Check(Quantity > 0),

	CONSTRAINT PK_JobsParts PRIMARY KEY(JobId,PartId)
)
-------------------------------------------------------------------------------------------
02. Insert

INSERT INTO Clients(FirstName,LastName,Phone) VALUES
('Teri',	'Ennaco',	'570-889-5187'),
('Merlyn',	'Lawler',	'201-588-7810'),
('Georgene',	'Montezuma',	'925-615-5185'),
('Jettie',	'Mconnell',	'908-802-3564'),
('Lemuel',	'Latzke	','631-748-6479'),
('Melodie',	'Knipp',	'805-690-1682'),
('Candida',	'Corbley','908-275-8357')


INSERT INTO Parts (SerialNumber,Description,Price,VendorId)
VALUES
('WP8182119','Door Boot Seal',117.86,2),
('W10780048','Suspension Rod',42.81,1),
('W10841140','Silicone Adhesive',6.77,	4),
('WPY055980','High Temperature Adhesive',13.94,3)
-------------------------------------------------------------------------------------------
03. Update

UPDATE Jobs
SET MechanicId = 3,Status = 'In Progress'
WHERE Status = 'Pending'
-------------------------------------------------------------------------------------------
04. Delete

DELETE
FROM OrderParts
WHERE OrderId = 19

DELETE
FROM Orders
WHERE OrderId = 19
-------------------------------------------------------------------------------------------
05. Mechanic Assignments

SELECT FirstName + ' ' + LastName AS FullName,Status,IssueDate
FROM Mechanics AS m
JOIN Jobs AS j ON j.MechanicId = m.MechanicId
ORDER BY m.MechanicId,j.IssueDate,j.JobId
-------------------------------------------------------------------------------------------
06. Current Clients

SELECT FirstName + ' ' + LastName AS Client,DATEDIFF(DAY,j.IssueDate,'2017-04-24') AS [Days going],Status
FROM Clients c
JOIN Jobs j ON c.ClientId = j.ClientId
WHERE j.FinishDate IS NULL
ORDER BY [Days going] DESC,c.ClientId
-------------------------------------------------------------------------------------------
07. Mechanic Performance

SELECT m.FirstName + ' ' + m.LastName AS FullName, AVG(DATEDIFF(DAY,IssueDate,FinishDate)) AS Average
FROM Mechanics AS m	
JOIN Jobs AS j ON m.MechanicId = j.MechanicId
GROUP BY j.MechanicId,m.FirstName + ' ' + m.LastName
ORDER BY j.MechanicId
-------------------------------------------------------------------------------------------
08. Available Mechanics

SELECT m.FirstName + ' ' + m.LastName AS FullName
FROM Mechanics m
LEFT JOIN Jobs j ON m.MechanicId = j.MechanicId
WHERE j.JobId IS NULL OR 
(
	SELECT COUNT(JobId) FROM Jobs
	WHERE Status != 'Finished' AND MechanicId = m.MechanicId
	GROUP BY MechanicId,Status
) IS NULL
GROUP BY m.MechanicId,m.FirstName + ' ' + m.LastName
ORDER BY m.MechanicId
-------------------------------------------------------------------------------------------
09. Past Expenses

SELECT j.JobId, ISNULL(SUM(op.Quantity * p.Price), 0) as Total
FROM Jobs  AS j
LEFT JOIN Orders AS o ON j.JobId = o.JobId
LEFT JOIN OrderParts AS op ON op.OrderId = o.OrderId
LEFT JOIN Parts AS p ON p.PartId = op.PartId
WHERE j.Status = 'Finished'
GROUP BY j.JobId
ORDER BY Total DESC,j.JobId
-------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------------