01. DDL

CREATE TABLE Passengers
(
	Id INT PRIMARY KEY IDENTITY,
	FullName VARCHAR(100) UNIQUE NOT NULL,
	Email VARCHAR(50) UNIQUE NOT NULL
)

CREATE TABLE Pilots
(
	Id INT PRIMARY KEY IDENTITY,
	FirstName Varchar(30) Unique NOT NULL,
	LastName VARCHAR(30) Unique NOT NULL,
	Age TINYINT NOT NULL,
	Rating FLOAT,
	CHECK(Age BETWEEN 21 AND 62),
	CHECK(Rating BETWEEN 0 AND 10)
)

CREATE TABLE AircraftTypes
(
	Id INT PRIMARY KEY IDENTITY,
	TypeName VARCHAR(30) UNIQUE NOT NULL
)

CREATE TABLE Aircraft
(
	Id INT PRIMARY KEY IDENTITY,
	Manufacturer VARCHAR(25) NOT NULL,
	Model VARCHAR(30) NOT NULL,
	[Year] INT NOT NULL,
	FlightHours INT,
	Condition CHAR(1) NOT NULL,
	TypeId INT NOT NULL REFERENCES AircraftTypes(Id)
)

CREATE TABLE PilotsAircraft
(
	AircraftId INT NOT NULL REFERENCES Aircraft(Id),
	PilotId INT NOT NULL REFERENCES Pilots(Id),

	PRIMARY KEY(AircraftId,PilotId)
)

CREATE TABLE Airports
(
	Id INT PRIMARY KEY IDENTITY,
	AirportName VARCHAR(70) UNIQUE NOT NULL,
	Country VARCHAR(100) UNIQUE NOT NULL
)

CREATE TABLE FlightDestinations
(
	Id INT PRIMARY KEY IDENTITY,
	AirportId INT NOT NULL REFERENCES Airports(Id),
	Start DATETIME NOT NULL,
	AircraftId INT NOT NULL REFERENCES Aircraft(Id),
	PassengerId INT NOT NULL REFERENCES Passengers(Id),
	TicketPrice DECIMAL(18,2) NOT NULL DEFAULT 15
)
--------------------------------------------------------------------------------------------
02. Insert

INSERT INTO Passengers([FullName],[Email])
SELECT 
CONCAT(p.FirstName,' ',p.LastName),
CONCAT(p.FirstName,p.LastName,'@gmail.com')
FROM Pilots AS p
WHERE p.Id BETWEEN 5 AND 15
--------------------------------------------------------------------------------------------
03. Update

UPDATE Aircraft 
SET Condition = 'A'
WHERE 
Condition IN ('C','B') AND
(FlightHours IS NULL OR FlightHours <= 100) AND
[Year] >= 2013
--------------------------------------------------------------------------------------------
04. Delete

DELETE FROM Passengers
WHERE LEN(FullName) <= 10
--------------------------------------------------------------------------------------------
05. Aircraft

SELECT a.Manufacturer,a.Model,a.FlightHours,a.Condition
FROM Aircraft AS a
ORDER BY a.FlightHours DESC
--------------------------------------------------------------------------------------------
06. Pilots and Aircraft

SELECT p.FirstName,p.LastName,a.Manufacturer,a.Model,a.FlightHours
FROM Pilots AS p
LEFT JOIN PilotsAircraft AS pA  ON pa.PilotId = p.Id
LEFT JOIN Aircraft AS a ON a.Id = pa.AircraftId
WHERE a.FlightHours < 304
ORDER BY a.FlightHours DESC,p.FirstName
--------------------------------------------------------------------------------------------
07. Top 20 Flight Destinations

SELECT TOP(20) f.Id,f.Start,p.FullName,a.AirportName,f.TicketPrice
FROM FlightDestinations AS f
JOIN Passengers AS p ON p.Id = f.PassengerId
JOIN Airports AS a ON a.Id = f.AirportId
WHERE DAY(f.[Start]) % 2 = 0
ORDER BY f.TicketPrice DESC,a.AirportName
--------------------------------------------------------------------------------------------
08. Number of Flights for Each Aircraft

SELECT 
a.Id,
a.Manufacturer,
a.FlightHours,
COUNT(f.PassengerId) AS FlightDestinationsCount,
ROUND(AVG(f.TicketPrice),2)
FROM FlightDestinations AS f
JOIN Aircraft AS a ON a.Id = f.AircraftId
GROUP BY a.id,a.Manufacturer,a.FlightHours
HAVING COUNT(f.PassengerId) >= 2
ORDER BY FlightDestinationsCount DESC,a.Id
--------------------------------------------------------------------------------------------
09. Regular Passengers

SELECT p.FullName,COUNT(f.AircraftId) AS countAircraft,
SUM(f.TicketPrice)
FROM Passengers AS p
JOIN FlightDestinations AS f ON f.PassengerId = p.Id
WHERE SUBSTRING(p.FullName,2,1) = 'a'
GROUP BY f.PassengerId,p.FullName
HAVING COUNT(f.AircraftId) > 1
ORDER BY p.FullName
--------------------------------------------------------------------------------------------
10. Full Info for Flight Destinations

SELECT ap.AirportName,f.[Start],f.TicketPrice,p.FullName,a.Manufacturer,a.Model
FROM FlightDestinations AS f
JOIN Aircraft AS a ON a.Id = f.AircraftId
JOIN Airports AS AP ON AP.id= f.AirportId
JOIN Passengers AS p ON p.Id = f.PassengerId
WHERE DATEPART(HOUR,f.[Start]) BETWEEN 6 AND 20 AND f.TicketPrice > 2500
ORDER BY a.Model
--------------------------------------------------------------------------------------------
11. Find all Destinations by Email Address

CREATE FUNCTION udf_FlightDestinationsByEmail(@email VARCHAR(200))
RETURNS INT
BEGIN 
DECLARE @passangerId INT = (SELECT Id FROM Passengers WHERE Email = @email)
DECLARE @Result INT = (SELECT COUNT(PassengerId) FROM FlightDestinations WHERE PassengerId = @passangerId)

return @Result
END
--------------------------------------------------------------------------------------------
12. Full Info for Airports

CREATE PROC usp_SearchByAirportName(@airportName VARCHAR(70))
AS
BEGIN
SELECT a.AirportName,p.FullName,
CASE
	WHEN f.TicketPrice <= 400 THEN 'Low'
	WHEN f.TicketPrice BETWEEN 401 AND 1500 THEN 'Medium'
	WHEN f.TicketPrice > 1500 THEN 'High'
END,
ai.Manufacturer,
ai.Condition,
ait.TypeName
FROM FlightDestinations AS f
JOIN Airports AS a ON a.Id = f.AirportId
JOIN Passengers AS p ON p.Id = f.PassengerId
JOIN Aircraft AS AI ON AI.Id = f.AircraftId
JOIN AircraftTypes AS AIT ON ait.Id = ai.TypeId
WHERE a.AirportName = @airportName
ORDER BY ai.Manufacturer,p.FullName
END
--------------------------------------------------------------------------------------------