01. DDL

CREATE TABLE Planets
(
	Id INT PRIMARY KEY IDENTITY,
	[Name] VARCHAR(30) NOT NULL
)

CREATE TABLE Spaceports
(
	Id INT PRIMARY KEY IDENTITY,
	[Name] VARCHAR(50) NOT NULL,
	PlanetId INT NOT NULL REFERENCES Planets(Id)
)

CREATE TABLE Spaceships
(
	Id INT PRIMARY KEY IDENTITY,
	[Name] VARCHAR(50) NOT NULL,
	Manufacturer VARCHAR(30) NOT NULL,
	LightSpeedRate INT DEFAULT 0
)

CREATE TABLE Colonists
(
	Id INT PRIMARY KEY IDENTITY,
	FirstName VARCHAR(20) NOT NULL,
	LastName VARCHAR(20) NOT NULL,
	Ucn VARCHAR(10) UNIQUE NOT NULL,
	BirthDate DATE NOT NULL
)

CREATE TABLE Journeys
(
	Id INT PRIMARY KEY IDENTITY,
	JourneyStart DATETIME NOT NULL,
	JourneyEnd DATETIME NOT NULL,
	Purpose VARCHAR(11),
	DestinationSpaceportId INT NOT NULL REFERENCES Spaceports(Id),
	SpaceshipId INT NOT NULL REFERENCES Spaceships(Id),
	CHECK(Purpose IN ('Medical','Technical','Educational','Military'))
)

CREATE TABLE TravelCards
(
	Id INT PRIMARY KEY IDENTITY,
	CardNumber CHAR(10) NOT NULL UNIQUE,
	JobDuringJourney VARCHAR(8),
	ColonistId INT NOT NULL REFERENCES Colonists(Id),
	JourneyId INT NOT NULL REFERENCES Journeys(Id),
	CHECK(JobDuringJourney IN ('Pilot','Engineer','Trooper','Cleaner','Cook'))
)
--------------------------------------------------------------------------------------
02. Insert

INSERT INTO Planets([Name])
VALUES
('Mars'),
('Earth'),
('Jupiter'),
('Saturn')

INSERT INTO Spaceships([Name],Manufacturer,LightSpeedRate)
VALUES
('Golf','VW',	3),
('WakaWaka','Wakanda',	4),
('Falcon9','SpaceX',1),
('Bed','Vidolov',6)
--------------------------------------------------------------------------------------
03. Update

UPDATE Spaceships
SET LightSpeedRate += 1
WHERE Id BETWEEN 8 AND 12
--------------------------------------------------------------------------------------
04. Delete

DELETE FROM TravelCards
WHERE JourneyId IN (1,2,3)

DELETE FROM Journeys
WHERE Id IN (1,2,3)
--------------------------------------------------------------------------------------
05. Select All Military Journeys

SELECT Id,CONVERT(VARCHAR,JourneyStart,103),CONVERT(VARCHAR,JourneyEnd,103)
FROM Journeys
WHERE Purpose = 'Military'
ORDER By JourneyStart
--------------------------------------------------------------------------------------
06. Select All Pilots

SELECT c.Id,CONCAT(c.FirstName,' ',c.LastName)
FROM Colonists AS c
JOIN TravelCards AS t ON t.ColonistId = c.Id
WHERE t.JobDuringJourney = 'Pilot'
ORDER BY c.Id
--------------------------------------------------------------------------------------
07. Count Colonists

SELECT Count(*) AS Count
FROM TravelCards AS t
JOIN Journeys AS j ON t.JourneyId = j.Id
WHERE Purpose = 'Technical'
GROUP BY Purpose
--------------------------------------------------------------------------------------
08. Select Spaceships With Pilots

SELECT s.Name,s.Manufacturer
FROM spaceships AS s
JOIN Journeys AS j ON j.SpaceshipId = s.Id
JOIN TravelCards AS t ON t.JourneyId = j.Id
JOIN Colonists AS c ON c.Id = t.ColonistId
WHERE t.JobDuringJourney = 'Pilot' AND DATEDIFF(YEAR,c.BirthDate,'01/01/2019') < 30
ORDER BY s.Name
--------------------------------------------------------------------------------------
09. Planets And Journeys

SELECT p.Name,COUNT(*)
FROM Planets AS p
JOIN Spaceports AS sp ON sp.PlanetId = p.Id
JOIN Journeys AS j ON sp.Id = j.DestinationSpaceportId
GROUP BY p.Name
ORDER BY COUNT(*) DESC,p.Name
--------------------------------------------------------------------------------------
10. Select Special Colonists

SELECT [Rank].Job,[Rank].FullName,[RANK].JobRank
FROM ( 
SELECT 
   DENSE_RANK() OVER (PARTITION BY tc.JobDuringJourney ORDER BY c.BirthDate) AS [JobRank],
   tc.JobDuringJourney AS Job,
   CONCAT(c.FirstName,' ',c.LastName) AS FullName
FROM Colonists AS c 
 JOIN TravelCards AS tc ON tc.ColonistId = c.Id
 JOIN Journeys AS j ON j.Id = tc.JourneyId
) AS [Rank]
WHERE JobRank = 2
--------------------------------------------------------------------------------------
11. Get Colonists Count

CREATE FUNCTION dbo.udf_GetColonistsCount(@PlanetName VARCHAR(30))
RETURNS INT
BEGIN
DECLARE @result INT = (SELECT Count(*)
FROM Planets AS p
JOIN Spaceports AS s ON s.PlanetId = p.Id
JOIN Journeys AS j ON j.DestinationSpaceportId = s.Id
JOIN TravelCards AS t ON t.JourneyId = j.Id
JOIN Colonists AS c ON c.Id = t.ColonistId
 WHERE p.Name = @PlanetName)

RETURN @result
END
--------------------------------------------------------------------------------------
12. Change Journey Purpose

CREATE PROC usp_ChangeJourneyPurpose(@JourneyId INT, @NewPurpose VARCHAR(MAX))
AS
BEGIN 
 DECLARE @currJourneyId INT = (SELECT Id FROM Journeys WHERE Id = @JourneyId)
	IF(@currJourneyId IS NULL)
		THROW 50001,'The journey does not exist!',1
 DECLARE @currPurpose VARCHAR(MAX) = (SELECT Purpose FROM Journeys WHERE Id = @currJourneyId)
	IF(@currPurpose = @NewPurpose)
		THROW 50002,'You cannot change the purpose!',1

	UPDATE Journeys
	SET Purpose = @NewPurpose
	WHERE Id = @JourneyId
END
--------------------------------------------------------------------------------------