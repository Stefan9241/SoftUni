01. DDL

CREATE TABLE Countries
(
 Id INT NOT NULL PRIMARY KEY IDENTITY,
 [Name] NVARCHAR(50) UNIQUE NOT NULL
)

CREATE TABLE Customers
(
 Id INT NOT NULL PRIMARY KEY IDENTITY,
 FirstName NVARCHAR(25) NOT NULL,
 LastName NVARCHAR(25) NOT NULL,
 Gender CHAR(1) NOT NULL,
 Age INT NOT NULL,
 PhoneNumber CHAR(10) NOT NULL,
 CountryId INT NOT NULL REFERENCES Countries(Id),
 CHECK(Gender IN ('M' , 'F'))
)

CREATE TABLE Products
(
 Id INT NOT NULL PRIMARY KEY IDENTITY,
 [Name] NVARCHAR(25) NOT NULL UNIQUE,
 [Description] NVARCHAR(250),
 Recipe NVARCHAR(MAX),
 Price DECIMAL(18,2) NOT NULL,
 CHECK(Price > 0 )
)

CREATE TABLE Feedbacks
(
 Id INT NOT NULL PRIMARY KEY IDENTITY,
 [Description] NVARCHAR(255),
 Rate DECIMAL(18,2) NOT NULL,
 ProductId INT NOT NULL REFERENCES Products(Id),
 CustomerId INT NOT NULL REFERENCES Customers(Id),
 CHECK(Rate BETWEEN 0 AND 10)
)

CREATE TABLE Distributors
(
 Id INT NOT NULL PRIMARY KEY IDENTITY,
 [Name] NVARCHAR(25) NOT NULL UNIQUE,
 AddressText NVARCHAR(30) NOT NULL,
 Summary NVARCHAR(200),
 CountryId INT NOT NULL REFERENCES Countries(Id)
 )

 CREATE TABLE Ingredients
(
 Id INT NOT NULL PRIMARY KEY IDENTITY,
 [Name] NVARCHAR(30) NOT NULL ,
 [Description] NVARCHAR(200) NOT NULL,
 OriginCountryId INT NOT NULL REFERENCES Countries(Id),
 DistributorId INT NOT NULL REFERENCES Distributors(Id)
 )

 CREATE TABLE ProductsIngredients
(
 ProductId INT NOT NULL REFERENCES Products(Id),
 IngredientId INT NOT NULL REFERENCES Ingredients(Id)
 PRIMARY KEY(ProductId,IngredientId)
)
------------------------------------------------------------------------------------------
02. Insert

INSERT INTO Distributors(Name,CountryId,AddressText,Summary)
VALUES
('Deloitte & Touche',2,	'6 Arch St #9757','Customizable neutral traveling'),
('Congress Title',13,'58 Hancock St','Customer loyalty'),
('Kitchen People',1,'3 E 31st St #77','Triple-buffered stable delivery'),
('General Color Co Inc',21,'6185 Bohn St #72','Focus group'),
('Beck Corporation',23,'21 E 64th Ave','Quality-focused 4th generation hardware')

INSERT INTO Customers(FirstName,LastName,Age,Gender,PhoneNumber,CountryId)
VALUES
('Francoise','Rautenstrauch',15,'M','0195698399',5),
('Kendra','Loud',22,'F','0063631526',11),
('Lourdes','Bauswell',50,'M','0139037043',8),
('Hannah','Edmison',18,'F','0043343686',1),
('Tom','Loeza',	31,'M','0144876096',23),
('Queenie','Kramarczyk',30,'F','0064215793',29),
('Hiu','Portaro',25,'M','0068277755',16),
('Josefa','Opitz',43,'F','0197887645',17)
------------------------------------------------------------------------------------------
03. Update

UPDATE Ingredients
SET DistributorId = 35
WHERE [Name] IN ('Bay Leaf','Paprika','Poppy')

UPDATE Ingredients
SET OriginCountryId = 14
WHERE OriginCountryId = 8
------------------------------------------------------------------------------------------
04. Delete

DELETE FROM Feedbacks
WHERE CustomerId = 14 OR ProductId = 5
------------------------------------------------------------------------------------------
05. Products By Price

SELECT Name,Price,Description
FROM Products
ORDER BY Price DESC,Name
------------------------------------------------------------------------------------------
06. Negative Feedback

SELECT f.ProductId,f.Rate,f.Description,f.CustomerId,c.Age,c.Gender 
FROM Feedbacks AS f
JOIN Customers AS c ON c.Id = f.CustomerId
WHERE f.Rate < 5.0
ORDER BY f.ProductId DESC,f.Rate
------------------------------------------------------------------------------------------
07. Customers without Feedback

SELECT 
      CONCAT(c.FirstName , ' ' , c.LastName) AS CustomerName,
	  c.PhoneNumber ,
	  c.Gender
FROM Customers AS c
LEFT JOIN Feedbacks AS f ON f.CustomerId = c.Id
WHERE f.Id IS NULL
ORDER BY c.Id
------------------------------------------------------------------------------------------
08. Customers by Criteria

SELECT c.FirstName,c.Age,c.PhoneNumber 
FROM Customers AS c
WHERE c.Age >= 21 AND c.FirstName LIKE '%an%' OR c.PhoneNumber LIKE '%38' AND c.CountryId != 31
ORDER BY c.FirstName,c.Age DESC
------------------------------------------------------------------------------------------
09. Middle Range Distributors

SELECT d.Name,i.Name,p.Name,AVG(f.Rate)
FROM Distributors AS d
JOIN Ingredients AS i ON d.Id = i.DistributorId
JOIN ProductsIngredients AS [pI] ON [pi].IngredientId = i.Id
JOIN Products AS p ON p.Id = [pI].ProductId
JOIN Feedbacks AS f ON f.ProductId = p.Id
GROUP BY d.Id,d.Name,i.Name,p.Name
HAVING AVG(f.Rate) BETWEEN 5 AND 8
ORDER BY d.Name,i.Name,p.Name
------------------------------------------------------------------------------------------
10. Country Representative

SELECT [Ranked].CountryName , Ranked.DistributorName
FROM ( SELECT c.Name AS CountryName,
		d.Name AS DistributorName,
DENSE_RANK() OVER (PARTITION BY  c.Name ORDER BY COUNT(i.Id) DESC) AS Rank
	FROM Countries AS c
	JOIN Distributors AS d ON d.CountryId = c.Id
	JOIN Ingredients AS i ON i.DistributorId = d.Id
	GROUP BY c.Name,d.Name) AS [Ranked]
WHERE [Ranked].[Rank] = 1
ORDER BY [Ranked].CountryName, [Ranked].DistributorName
------------------------------------------------------------------------------------------
11.Customers With Countries

CREATE VIEW v_UserWithCountries 
AS
(
SELECT CONCAT(C.FirstName, ' ', c.LastName) AS CustomerName,
       C.Age AS Age,
       C.Gender AS Gender,
       C2.Name AS CountryName
 FROM Customers AS C
 JOIN Countries C2 ON C2.Id = C.CountryId
)
------------------------------------------------------------------------------------------
12. Delete Products

CREATE TRIGGER dbo.ProductsToDelete
    ON Products
    INSTEAD OF DELETE
    AS
BEGIN
    DECLARE
        @deletedProductId INT = (SELECT p.Id
                                 FROM Products AS p
                                 JOIN deleted AS d ON d.Id = p.Id)
    DELETE
    FROM ProductsIngredients
    WHERE ProductId = @deletedProductId
    DELETE
    FROM Feedbacks
    WHERE ProductId = @deletedProductId
    DELETE
    FROM Products
    WHERE Id = @deletedProductId
END
------------------------------------------------------------------------------------------